/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package generator;

import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author HK
 */
public class GUI extends javax.swing.JFrame {

    boolean blad =false ;
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        dlugosc = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        stan = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        odczepy = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        rozmiar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        losuj = new javax.swing.JButton();
        zapisz = new javax.swing.JButton();
        generuj = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        iloscodczep = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        dlugosc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dlugoscActionPerformed(evt);
            }
        });
        dlugosc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dlugoscKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dlugoscKeyTyped(evt);
            }
        });

        jLabel2.setText("Długość generowanego ciągu*");

        jLabel1.setText("Stan początkowy rejestru");

        stan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                stanKeyReleased(evt);
            }
        });

        jLabel3.setText("Miejsca odczepów(np.3,5,712) **");

        odczepy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                odczepyActionPerformed(evt);
            }
        });
        odczepy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                odczepyKeyReleased(evt);
            }
        });

        jLabel4.setText("Rozmiar rejestru");

        rozmiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rozmiarActionPerformed(evt);
            }
        });
        rozmiar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rozmiarKeyReleased(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel5.setText("Wygenerowany ciąg : ");

        losuj.setText("Losuj ");
        losuj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                losujActionPerformed(evt);
            }
        });

        zapisz.setText("Zapisz wygenerowany ciąg do pliku");
        zapisz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zapiszActionPerformed(evt);
            }
        });

        generuj.setText("Generuj");
        generuj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generujActionPerformed(evt);
            }
        });

        jLabel6.setText("Ilość odczepów ");

        iloscodczep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                iloscodczepKeyReleased(evt);
            }
        });

        jLabel7.setText("*  wypełnia tylko użytkownik ");

        jLabel8.setText("** Zerowy element rejestru nie jest dostępny jako odczep ");

        jButton1.setText("Zapisz Stan ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Wczytaj stan");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dlugosc)
                            .addComponent(rozmiar, javax.swing.GroupLayout.DEFAULT_SIZE, 614, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stan, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(29, 29, 29))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(4, 4, 4))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(losuj, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(generuj, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                                .addComponent(zapisz, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(odczepy, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(iloscodczep, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dlugosc, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rozmiar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stan, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iloscodczep, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(odczepy, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(generuj, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(zapisz, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(losuj, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jTabbedPane2.addTab("Generuj", jPanel2);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setText("\nGENERATOR CIĄGÓW PSEUDOLOSOWYCH :\nREJSTR LFSR(LINEAR FEEDBACK SHIFT REGISTER) Z DOWOLNĄ ILOSCIĄ ODCZEPÓW ORAZ Z DOWOLNYM UMIEJSCOWIENIEM ODCZEPÓW.\nNA WARTOSCIACH ODCZEPÓW WYKONUJEMY DZIAŁANIE XOR(EXCLUSIVE OR).DŁUGOŚC SEKWENCJI WYNOSI 2^M -1 GDZIE M = ROZMIAR \nREJESTRU NASTĘPNIE SEKWECJA ZACZYNA SIĘ POWTARZAĆ.\n\nDŁUGOŚC GENEROWANEGO CIĄGU - PODAJE UŻYTKOWNIK \nROZMIAR REJSTRU - PODAJE UŻYTKOWNIK \nSTAN POCZĄTKOWY REJESTRU - PODAJE UŻYTKOWNIK LUB GENEROWANY JEST AUTOMATYCZNIE ZA POMOCĄ PRZYCISKU \"LOSUJ STAN POCZĄTKOWY REJESTRU ORAZ MIEJSCA ODCZEPÓW \n*NIE MOŻE PRZEKRACZAĆ DŁUGOŚCI REJESTRU\nMIEJSCA ODCZEPÓW -  PODAJE UŻYTKOWNIK LUB GENEROWANE SĄ AUTOMATYCZNIE ZA POMOCĄ PRZYCISKU \"LOSUJ STAN POCZĄTKOWY REJESTRU ORAZ MIEJSCA ODCZEPÓW \" NP.(3,8,456,1098)\n*MAKSYMALNE MIEJSCE ODCZEPU NIE MOŻE BYĆ WIEKSZE NIŻ ROZMIAR REJESTRU\nZAPISZ DO PLIKU - UMOŻLIWIA UŻYTKOWNIKOW ZAPISANIE DO PLIKU WYGENEROWANEGO CIĄGU \n\n\nOPIS NAJWAŻNIEJSZYCH FUNKCJI I METOD :\n\nLFSR.shift() - METODA KTÓRA PRZESUWA REJESTR DODAJĄC WYNIK DZIAŁANIA XOR NA WARTOSCIACH Z ODCZEPÓW NA POCZĄTEK REJESTRU ,USUWA OSTATNI ELEMENT Z REJESTRU ORAZ \nZWRACA WYNIK PRZESUNIĘCIA REJSTRU CZYLI ELEMENT USNIĘTY Z REJESTRU.\n\nAUTOR : HUBERT KRZEPKOWSKI");
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 843, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("O Programie", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        JFileChooser jFileChooser = new JFileChooser();
        jFileChooser.setFileFilter(filter);
        int odpowiedz = jFileChooser.showOpenDialog(this);
        if (odpowiedz == jFileChooser.APPROVE_OPTION) {
            File file = jFileChooser.getSelectedFile();
         
            try {

                Scanner in = new Scanner(file);
                String[] tab = new String[5];
                for (int i=0 ;i<5;i++){
                    tab[i] = in.nextLine();
                    
                    
                }
                dlugosc.setText(tab[0]);
                rozmiar.setText(tab[1]);
                stan.setText(tab[2]);
                iloscodczep.setText(tab[3]);
                odczepy.setText(tab[4]);
                
                
                // wczytaj=read( new FileReader( file.getAbsolutePath() ), null );
                // rozmiar.read( new FileReader( file.getAbsolutePath() ), ";" );
                //stan.read( new FileReader( file.getAbsolutePath() ), ";" );
                //iloscodczep.read( new FileReader( file.getAbsolutePath() ), ";" );
                // odczepy.read( new FileReader( file.getAbsolutePath() ), ";" );

            } catch (IOException e) {
                System.out.println("Nie mogę otworzyć pliku: "+file.getAbsolutePath());
                System.out.println("Problem: "+e);
            }
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFrame parentFrame = new JFrame();

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Specify a file to save");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        fileChooser.setFileFilter(filter);

        int userSelection = fileChooser.showSaveDialog(parentFrame);
        String suffix=".txt";
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            if(!fileChooser.getSelectedFile().getAbsolutePath().endsWith(suffix)){
                fileToSave = new File(fileChooser.getSelectedFile() + suffix);
            }
            System.out.println("Save as file: " + fileToSave.getAbsolutePath());
            PrintWriter writer;
            try {
                writer = new PrintWriter(fileToSave, "UTF-8");
                writer.println(dlugosc.getText());
                writer.println(rozmiar.getText());
                writer.println(stan.getText());
                writer.println(iloscodczep.getText());
                writer.println(odczepy.getText());

                writer.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void iloscodczepKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_iloscodczepKeyReleased
        char[] ile=iloscodczep.getText().trim().toCharArray();
        if(iloscodczep.getText().isEmpty()){
            iloscodczep.setBackground(Color.RED);
            blad=true;
            return;
        }else{blad=false;}
        for(int i=0;i<ile.length;i++){

            if(ile[0]!='0'&&ile[i]=='0'||ile[i] =='1'||ile[i] =='2'||ile[i] =='3'||ile[i] =='4'||ile[i] =='5'||ile[i] =='6'||ile[i] =='7'||ile[i] =='8'||ile[i] =='9')
            {
                iloscodczep.setBackground(Color.white);
                blad=false;
            }
            else{iloscodczep.setBackground(Color.RED); blad=true; return;}
        }

    }//GEN-LAST:event_iloscodczepKeyReleased

    private void generujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generujActionPerformed

        if(blad==false){
            char[] ile=dlugosc.getText().trim().toCharArray();
            char[] rozmiarrej=rozmiar.getText().trim().toCharArray();
            char[] stanp=stan.getText().trim().toCharArray();
            char[] odczep=odczepy.getText().trim().toCharArray();
            char[] iloscodczepow =iloscodczep.getText().trim().toCharArray();
            boolean zle=false;
            if(iloscodczep.getText().isEmpty()){
                iloscodczep.setBackground(Color.RED);
                zle=true;
            }

            if(rozmiar.getText().isEmpty()){
                rozmiar.setBackground(Color.RED);
                zle=true;
            }

            if(dlugosc.getText().isEmpty()){
                dlugosc.setBackground(Color.RED);
                zle=true;
            }
            if(stan.getText().isEmpty()){
                stan.setBackground(Color.RED);
                zle=true;
            }
            if(odczepy.getText().isEmpty()){
                odczepy.setBackground(Color.RED);
                zle=true;
            }
            if(zle==true)return;

            int ilegen=Integer.parseInt(dlugosc.getText());
            LFSR rej = new LFSR(stan.getText().trim(),odczepy.getText().trim());
//                 for(int i=0;i<Integer.parseInt(rozmiar.getText());i++){
//                rej.shift();
//
//            }
            String wynik="";
            StringBuilder sb=new StringBuilder(wynik);
            for(int i=0;i<ilegen;i++){
                sb.append(Integer.toString(rej.shift()));

            }
            wynik=sb.toString();
            jTextArea1.setText(wynik);
        }else  jTextArea1.setText("errr");

    }//GEN-LAST:event_generujActionPerformed

    private void zapiszActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zapiszActionPerformed
        // TODO add your handling code here:
        JFrame parentFrame = new JFrame();

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Specify a file to save");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        fileChooser.setFileFilter(filter);

        int userSelection = fileChooser.showSaveDialog(parentFrame);
        String suffix=".txt";
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            if(!fileChooser.getSelectedFile().getAbsolutePath().endsWith(suffix)){
                fileToSave = new File(fileChooser.getSelectedFile() + suffix);
            }
            System.out.println("Save as file: " + fileToSave.getAbsolutePath());
            PrintWriter writer;
            try {
                writer = new PrintWriter(fileToSave, "UTF-8");
                writer.println(jTextArea1.getText());
                writer.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }

        }        // TODO add your handling code her

    }//GEN-LAST:event_zapiszActionPerformed

    private void losujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_losujActionPerformed
        char[] ile=dlugosc.getText().trim().toCharArray();
        char[] rozmiarrej=rozmiar.getText().trim().toCharArray();
        char[] stanp=stan.getText().trim().toCharArray();
        char[] odczep=odczepy.getText().trim().toCharArray();
        char[] iloscodczepow =iloscodczep.getText().trim().toCharArray();
        Random generator = new Random();

        String s = "" ;
        rozmiar.setText(Integer.toString(generator.nextInt(200000)+1));
        int rozmiarrejestru = Integer.parseInt(rozmiar.getText());
        for(int i=0 ;i<rozmiarrejestru-1;i++){
            s=s+Integer.toString(generator.nextInt(2));
        }
        stan.setText(s);
        int size=generator.nextInt(100)+1;
        iloscodczep.setText(Integer.toString(size));
        String z="";
        for(int i=0;i<size;i++){
            int g =generator.nextInt(rozmiarrejestru);
            if (g==0)g=1;
            int e =generator.nextInt(rozmiarrejestru);
            if (e==0)e=1;
            if(i==size-1){
                z=z+Integer.toString(g);
            }else{
                z=z+Integer.toString(e)+",";
            }

        }
        odczepy.setText(z);

    }//GEN-LAST:event_losujActionPerformed

    private void rozmiarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rozmiarKeyReleased

        char[] rozmiarrej=rozmiar.getText().trim().toCharArray();
        if(rozmiar.getText().isEmpty()){
            rozmiar.setBackground(Color.RED);
            blad=true;
            return;
        }else{blad=false;}

        for(int i=0;i<rozmiarrej.length;i++){

            if(rozmiarrej[0]!='0'&&rozmiarrej[i]=='0'||rozmiarrej[i] =='1'||rozmiarrej[i] =='2'||rozmiarrej[i] =='3'||rozmiarrej[i] =='4'||rozmiarrej[i] =='5'||rozmiarrej[i] =='6'||rozmiarrej[i] =='7'||rozmiarrej[i] =='8'||rozmiarrej[i] =='9')
            {rozmiar.setBackground(Color.white);blad=false;}
            else{rozmiar.setBackground(Color.RED); blad=true; return;}
        }
    }//GEN-LAST:event_rozmiarKeyReleased

    private void rozmiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rozmiarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rozmiarActionPerformed

    private void odczepyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_odczepyKeyReleased
        String odp=odczepy.getText().trim();
        char[] xory =odczepy.getText().trim().toCharArray();
        // if( odp.matches("[0-9]||[[1-9]+[0=] , ]+[0-9]+")){
            if(odp.matches("[0-9]||[1-9]+[0-9]*||([1-9]+[0-9]*[,])*[1-9]+[0-9]*")){
                odczepy.setBackground(Color.white);
                blad=false;
            }else{odczepy.setBackground(Color.RED);blad=true;return;}

    }//GEN-LAST:event_odczepyKeyReleased

    private void odczepyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_odczepyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_odczepyActionPerformed

    private void stanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stanKeyReleased
        char[] stanp=stan.getText().trim().toCharArray();
        int suma=0;
        for(char c :stanp){
            suma =suma+Character.getNumericValue(c);
        }
        if(stan.getText().isEmpty()){
            stan.setBackground(Color.RED);
            blad=true;
            return;
        }else{blad=false;}

        for(int i=0;i<stanp.length;i++){

            if(suma>0&&stanp[i]=='0'||stanp[i] =='1')
            {stan.setBackground(Color.white);blad=false;}
            else{stan.setBackground(Color.RED); blad=true; return;}
        }
    }//GEN-LAST:event_stanKeyReleased

    private void dlugoscKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dlugoscKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_dlugoscKeyTyped

    private void dlugoscKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dlugoscKeyReleased
        // TODO add your handling code here:
        char[] ile=dlugosc.getText().trim().toCharArray();
        if(dlugosc.getText().isEmpty()){
            dlugosc.setBackground(Color.RED);
            blad=true;
            return;
        }else{blad=false;}
        for(int i=0;i<ile.length;i++){

            if(dlugosc.getText().isEmpty()!=true&&ile[0]!='0'&&ile[i]=='0'||ile[i] =='1'||ile[i] =='2'||ile[i] =='3'||ile[i] =='4'||ile[i] =='5'||ile[i] =='6'||ile[i] =='7'||ile[i] =='8'||ile[i] =='9')
            {
                dlugosc.setBackground(Color.white);
                blad=false;
            }
            else{dlugosc.setBackground(Color.RED); blad=true; return;}
        }

    }//GEN-LAST:event_dlugoscKeyReleased

    private void dlugoscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dlugoscActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_dlugoscActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField dlugosc;
    private javax.swing.JButton generuj;
    private javax.swing.JTextField iloscodczep;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JButton losuj;
    private javax.swing.JTextField odczepy;
    private javax.swing.JTextField rozmiar;
    private javax.swing.JTextField stan;
    private javax.swing.JButton zapisz;
    // End of variables declaration//GEN-END:variables
}
